(function (global) {
var module$abstract_map={},AbstractMap$$module$abstract_map=module$abstract_map.module$exports={};AbstractMap$$module$abstract_map.addEach=function(a){a&&Object(a)===a&&("function"===typeof a.forEach?"function"===typeof a.keys?a.forEach(function(a,c){this.set(c,a)},this):a.forEach(function(a){this.set(a[0],a[1])},this):Object.keys(a).forEach(function(b){this.set(b,a[b])},this))};
AbstractMap$$module$abstract_map.get=function(a,b){var c=this.contentSet.get(new this.Item(a));return c?c.value:1<arguments.length?b:this.content(a)};AbstractMap$$module$abstract_map.set=function(a,b){var c=new this.Item(a,b),d=this.contentSet.get(c),e=!1;d?d.value=b:this.contentSet.add(c)&&(this.length++,e=!0);return e};AbstractMap$$module$abstract_map.has=function(a){return this.contentSet.has(new this.Item(a))};
AbstractMap$$module$abstract_map["delete"]=function(a){return this.contentSet["delete"](new this.Item(a))?(this.length--,!0):!1};AbstractMap$$module$abstract_map.clear=function(){this.contentSet.clear();this.length=0};AbstractMap$$module$abstract_map.reduce=function(a,b,c){return this.contentSet.reduce(function(b,e){return a.call(c,b,e.value,e.key,this)},b,this)};
AbstractMap$$module$abstract_map.reduceRight=function(a,b,c){return this.contentSet.reduceRight(function(b,e){return a.call(c,b,e.value,e.key,this)},b,this)};AbstractMap$$module$abstract_map.keys=function(){return this.map(getKey$$module$abstract_map)};function getKey$$module$abstract_map(a,b){return b}AbstractMap$$module$abstract_map.values=function(){return this.map(getValue$$module$abstract_map)};function getValue$$module$abstract_map(a){return a}AbstractMap$$module$abstract_map.items=function(){return this.map(getItem$$module$abstract_map)};
function getItem$$module$abstract_map(a,b){return[b,a]}AbstractMap$$module$abstract_map.Item=Item$$module$abstract_map;function Item$$module$abstract_map(a,b){this.key=a;this.value=b}module$abstract_map.module$exports&&(module$abstract_map=module$abstract_map.module$exports);var module$tree_log={};module$tree_log.module$exports=TreeLog$$module$tree_log;function TreeLog$$module$tree_log(){}TreeLog$$module$tree_log.ascii={intersection:"+",through:"-",branchUp:"+",branchDown:"+",fromBelow:".",fromAbove:"'",fromBoth:"+",strafe:"|"};TreeLog$$module$tree_log.unicodeRound={intersection:"\u254b",through:"\u2501",branchUp:"\u253b",branchDown:"\u2533",fromBelow:"\u256d",fromAbove:"\u2570",fromBoth:"\u2523",strafe:"\u2503"};
TreeLog$$module$tree_log.unicodeSharp={intersection:"\u254b",through:"\u2501",branchUp:"\u253b",branchDown:"\u2533",fromBelow:"\u250f",fromAbove:"\u2517",fromBoth:"\u2523",strafe:"\u2503"};module$tree_log.module$exports&&(module$tree_log=module$tree_log.module$exports);var module$weak_map={};
module$weak_map.module$exports="undefined"!==typeof WeakMap?WeakMap:function(){function a(a){a.prototype=null;return Object.freeze(a)}var b=Object.getOwnPropertyNames,c=Object.defineProperty,d={};b(Object).forEach(function(a){d[a]=Object[a]});var e="ident:"+Math.random()+"___";if("undefined"!==typeof crypto&&"function"===typeof crypto.getRandomValues&&"function"===typeof ArrayBuffer&&"function"===typeof Uint8Array){var f=new ArrayBuffer(25),f=new Uint8Array(f);crypto.getRandomValues(f);e="rand:"+
Array.prototype.map.call(f,function(a){return(a%36).toString(36)}).join("")+"___"}c(Object,"getOwnPropertyNames",{value:function(a){return b(a).filter(function(a){return a!==e})}});"getPropertyNames"in Object&&c(Object,"getPropertyNames",{value:function(a){return d.getPropertyNames(a).filter(function(a){return a!==e})}});var g=function(a){if(a!==Object(a))throw new TypeError("Not an object: "+a);var b=a[e];if(b&&b.key===a)return b;if(d.isExtensible(a))return b={key:a,gets:[],vals:[]},c(a,e,{value:b,
writable:!1,enumerable:!1,configurable:!1}),b},i=Object.freeze;c(Object,"freeze",{value:function(a){g(a);return i(a)}});var j=Object.seal;c(Object,"seal",{value:function(a){g(a);return j(a)}});var h=Object.preventExtensions;c(Object,"preventExtensions",{value:function(a){g(a);return h(a)}});var k=function(){function b(a,e){var f=g(a),h;f?(h=f.gets.indexOf(b),f=f.vals):(h=c.indexOf(a),f=d);return 0<=h?f[h]:e}var c=[],d=[];return Object.create(k.prototype,{get___:{value:a(b)},has___:{value:a(function(a){var d=
g(a);return 0<=(d?d.gets.indexOf(b):c.indexOf(a))})},set___:{value:a(function(a,e){var f=g(a),h;f?(h=f.gets.indexOf(b),0<=h?f.vals[h]=e:(f.gets.push(b),f.vals.push(e))):(h=c.indexOf(a),0<=h?d[h]=e:(c.push(a),d.push(e)))})},delete___:{value:a(function(a){var e=g(a);e?(a=e.gets.indexOf(b),0<=a&&(e.gets.splice(a,1),e.vals.splice(a,1))):(a=c.indexOf(a),0<=a&&(c.splice(a,1),d.splice(a,1)));return!0})}})};k.prototype=Object.create(Object.prototype,{get:{value:function(a,b){return this.get___(a,b)},writable:!0,
configurable:!0},has:{value:function(a){return this.has___(a)},writable:!0,configurable:!0},set:{value:function(a,b){this.set___(a,b)},writable:!0,configurable:!0},"delete":{value:function(a){return this.delete___(a)},writable:!0,configurable:!0}});return k}();module$weak_map.module$exports&&(module$weak_map=module$weak_map.module$exports);var module$object={},WeakMap$$module$object=module$weak_map;module$object.module$exports=Object;Object.empty=Object.freeze(Object.create(null));Object.isObject=function(a){return Object(a)===a};Object.getValueOf=function(a){Object.can(a,"valueOf")&&(a=a.valueOf());return a};var hashMap$$module$object=new WeakMap$$module$object;
Object.hash=function(a){return Object.can(a,"hash")?""+a.hash():Object(a)===a?(hashMap$$module$object.has(a)||hashMap$$module$object.set(a,Math.random().toString(36).slice(2)),hashMap$$module$object.get(a)):""+a};var owns$$module$object=Object.prototype.hasOwnProperty;Object.owns=function(a,b){return owns$$module$object.call(a,b)};Object.can=function(a,b){return null!=a&&"function"===typeof a[b]&&!owns$$module$object.call(a,b)};
Object.has=function(a,b){if("object"!==typeof a)throw Error("Object.has can't accept non-object: "+typeof a);if(Object.can(a,"has"))return a.has(b);if("string"===typeof b)return b in a&&a[b]!==Object.prototype[b];throw Error("Key must be a string for Object.has on plain objects");};Object.get=function(a,b,c){if("object"!==typeof a)throw Error("Object.get can't accept non-object: "+typeof a);return Object.can(a,"get")?a.get(b,c):Object.has(a,b)?a[b]:c};
Object.set=function(a,b,c){Object.can(a,"set")?a.set(b,c):a[b]=c};Object.forEach=function(a,b,c){Object.keys(a).forEach(function(d){b.call(c,a[d],d,a)})};Object.map=function(a,b,c){return Object.keys(a).map(function(d){return b.call(c,a[d],d,a)})};Object.values=function(a){return Object.map(a,Function.identity)};Object.is=function(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b};
Object.equals=function(a,b){a=Object.getValueOf(a);b=Object.getValueOf(b);return a===b?0!==a||1/a===1/b:Object.can(a,"equals")?a.equals(b):Object.can(b,"equals")?b.equals(a):a!==a&&b!==b};Object.compare=function(a,b){a=Object.getValueOf(a);b=Object.getValueOf(b);return a===b?0:"number"===typeof a&&"number"===typeof b?a-b:"string"===typeof a?a<b?-1:1:Object.can(a,"compare")?a.compare(b):Object.can(b,"compare")?-b.compare(a):0};
Object.clone=function(a,b,c){a=Object.getValueOf(a);if(void 0===b)b=Infinity;else if(0===b)return a;return c&&Object.isObject(a)&&Object.can(a,"clone")?(c.has(a)||c.set(a,a.clone(b,c)),c.get(a)):a};Object.clear=function(a){if(Object.can(a,"clear"))a.clear();else for(var b=Object.keys(a),c=b.length;c;)c--,delete a[b[c]];return a};Function.noop=function(){};Function.identity=function(a){return a};module$object.module$exports&&(module$object=module$object.module$exports);var module$observable={},WeakMap$$module$observable=module$weak_map,contentChangeDescriptors$$module$observable=new WeakMap$$module$observable,Observable$$module$observable=module$observable;Observable$$module$observable.getContentChangeDescriptor=function(){contentChangeDescriptors$$module$observable.has(this)||contentChangeDescriptors$$module$observable.set(this,{isActive:!1,changeListeners:[],willChangeListeners:[]});return contentChangeDescriptors$$module$observable.get(this)};
Observable$$module$observable.addContentChangeListener=function(a,b){!this.isObservable&&this.makeObservable&&this.makeObservable();var c=this.getContentChangeDescriptor(),c=b?c.willChangeListeners:c.changeListeners;c.push(a);this.isObserved=!!c.length};
Observable$$module$observable.removeContentChangeListener=function(a,b){var c=this.getContentChangeDescriptor(),c=b?c.willChangeListeners:c.changeListeners,d=c.find(a);if(!d)throw Error("Can't remove listener: does not exist.");c.splice(d,1);this.isObserved=!!c.length};
Observable$$module$observable.dispatchContentChange=function(a,b,c,d){var e=this.getContentChangeDescriptor();if(!e.isActive){e.isActive=!0;var f;f=d?e.willChangeListeners:e.changeListeners;try{f.forEach(function(e){e.handleEvent?e.handleEvent({phase:d?"before":"after",currentTarget:this,target:this,plus:a,minus:b,index:c}):(e=d?e.handleContentWillChange||e:e.handleContentChange||e,e.call&&e.call(this,a,b,c,d))},this)}finally{e.isActive=!1}}};
Observable$$module$observable.addBeforeContentChangeListener=function(a){return this.addContentChangeListener(a,!0)};Observable$$module$observable.removeBeforeContentChangeListener=function(a){return this.removeContentChangeListener(a,!0)};Observable$$module$observable.dispatchBeforeContentChange=function(a,b,c){return this.dispatchContentChange(a,b,c,!0)};var module$reducible={};module$object;var Reducible$$module$reducible=module$reducible;Reducible$$module$reducible.addEach=function(a){if(a&&Object(a)===a)if("function"===typeof a.forEach)a.forEach(this.add,this);else if("number"===typeof a.length)for(var b=0;b<a.length;b++)this.add(a[b],b);else Object.keys(a).forEach(function(b){this.add(a[b],b)},this)};Reducible$$module$reducible.forEach=function(a,b){return this.reduce(function(c,d,e,f,g){a.call(b,d,e,f,g)},void 0)};
Reducible$$module$reducible.map=function(a,b){var c=[];this.reduce(function(d,e,f,g,i){c.push(a.call(b,e,f,g,i))},void 0);return c};Reducible$$module$reducible.toArray=function(){return this.map(identity$$module$reducible)};Reducible$$module$reducible.toObject=function(){var a={};this.reduce(function(b,c,d){a[d]=c},void 0);return a};Reducible$$module$reducible.filter=function(a,b){var c=this.constructClone();this.reduce(c,function(d,e,f,g,i){a.call(b,e,f,g,i)&&c.push(e)},void 0);return c};
Reducible$$module$reducible.every=function(a,b){return this.reduce(function(c,d,e,f,g){return c&&a.call(b,d,e,f,g)},!0)};Reducible$$module$reducible.some=function(a,b){return this.reduce(function(c,d,e,f,g){return c||a.call(b,d,e,f,g)},!1)};Reducible$$module$reducible.all=function(){return this.every(Boolean)};Reducible$$module$reducible.any=function(){return this.some(Boolean)};
Reducible$$module$reducible.min=function(a){a=this.contentCompare||Object.compare;return this.reduce(function(b,c){return 0>a(c,b)?c:b},Infinity)};Reducible$$module$reducible.max=function(a){a=this.contentCompare||Object.compare;return this.reduce(function(b,c){return 0<a(c,b)?c:b},-Infinity)};Reducible$$module$reducible.sum=function(a){return this.reduce(add$$module$reducible,void 0===a?0:a)};function add$$module$reducible(a,b){return a+b}
Reducible$$module$reducible.average=function(a){var b=void 0===a?0:a,c=void 0===a?0:a;this.reduce(function(a,e){b+=e;c+=1},void 0);return b/c};Reducible$$module$reducible.concat=function(){for(var a=this.constructClone(this),b=0;b<arguments.length;b++)a.addEach(arguments[b]);return a};Reducible$$module$reducible.flatten=function(){return this.reduce(flattenReducer$$module$reducible,this.constructClone())};
function flattenReducer$$module$reducible(a,b){b.forEach(thisPush$$module$reducible,a);return a}function thisPush$$module$reducible(a){this.push(a)}Reducible$$module$reducible.zip=function(){var a=Array.prototype.slice.call(arguments);a.unshift(this);return transpose$$module$reducible(a)};
function transpose$$module$reducible(a){for(var b=[],c=Infinity,d=0;d<a.length;d++){var e=a[d];e.length<c&&(c=e.length)}for(d=0;d<a.length;d++){var f=0;a[d].reduce(function(a,e){f<c&&(b[f]=b[f]||[],b[f][d]=e);f++},void 0)}return b}
Reducible$$module$reducible.sorted=function(a,b,c){a=a||this.contentCompare||Object.compare;a.by?(b=a.by,a=a.compare||this.contentCompare||Object.compare):b=b||identity$$module$reducible;void 0===c&&(c=1);return this.map(function(a){return{by:b(a),value:a}}).sort(function(b,e){return a(b.by,e.by)*c}).map(function(a){return a.value})};Reducible$$module$reducible.reversed=function(){return this.constructClone(this).reverse()};
Reducible$$module$reducible.clone=function(a,b){if(void 0===a)a=Infinity;else if(0===a)return this;var c=this.constructClone();this.forEach(function(d,e){Object.clone&&(d=Object.clone(d,a-1,b));c.set(e,d)},this);return c};function identity$$module$reducible(a){return a};var module$array_shim={},Reducible$$module$array_shim=module$reducible,object_toString$$module$array_shim=Object.prototype.toString;Array.isArray||(Array.isArray=function(a){return"[object Array]"==object_toString$$module$array_shim.call(a)});Array.prototype.forEach||(Array.prototype.forEach=Reducible$$module$array_shim.forEach);Array.prototype.map||(Array.prototype.map=Reducible$$module$array_shim.map);Array.prototype.filter||(Array.prototype.filter=Reducible$$module$array_shim.filter);
Array.prototype.every||(Array.prototype.every=Reducible$$module$array_shim.every);Array.prototype.some||(Array.prototype.some=Reducible$$module$array_shim.some);
Array.prototype.reduce||(Array.prototype.reduce=function(a){var b=toObject(this),c=b.length>>>0;if(object_toString$$module$array_shim.call(a)!="[object Function]")throw new TypeError(a+" is not a function");if(!c&&arguments.length==1)throw new TypeError("reduce of empty array with no initial value");var d=0,e;if(arguments.length>=2)e=arguments[1];else{do{if(d in b){e=b[d++];break}if(++d>=c)throw new TypeError("reduce of empty array with no initial value");}while(1)}for(;d<c;d++)d in b&&(e=a.call(void 0,
e,b[d],d,b));return e});
Array.prototype.reduceRight||(Array.prototype.reduceRight=function(a){var b=toObject(this),c=b.length>>>0;if(object_toString$$module$array_shim.call(a)!="[object Function]")throw new TypeError(a+" is not a function");if(!c&&arguments.length==1)throw new TypeError("reduceRight of empty array with no initial value");var d,c=c-1;if(arguments.length>=2)d=arguments[1];else{do{if(c in b){d=b[c--];break}if(--c<0)throw new TypeError("reduceRight of empty array with no initial value");}while(1)}do c in this&&
(d=a.call(void 0,d,b[c],c,b));while(c--);return d});Array.prototype.indexOf||(Array.prototype.indexOf=function(a){var b=toObject(this),c=b.length>>>0;if(!c)return-1;var d=0;arguments.length>1&&(d=toInteger(arguments[1]));for(d=d>=0?d:Math.max(0,c+d);d<c;d++)if(d in b&&b[d]===a)return d;return-1});
Array.prototype.lastIndexOf||(Array.prototype.lastIndexOf=function(a){var b=toObject(this),c=b.length>>>0;if(!c)return-1;var d=c-1;arguments.length>1&&(d=Math.min(d,toInteger(arguments[1])));for(d=d>=0?d:c-Math.abs(d);d>=0;d--)if(d in b&&a===b[d])return d;return-1});var module$array={};module$array_shim;module$object;var Reducible$$module$array=module$reducible;module$array.module$exports=Array;Array.empty=[];Object.freeze&&Object.freeze(Array.empty);Array.from=function(a){var b=[];b.addEach(a);return b};Array.prototype.constructClone=function(a){var b=new this.constructor;b.addEach(a);return b};Array.prototype.has=function(a,b){return-1!==this.find(a,b)};Array.prototype.get=function(a){if(+a!==a)throw Error("Indicies must be numbers");return this[a]};
Array.prototype.set=function(a,b){this.splice(a,1,b);return!0};Array.prototype.add=function(a){this.push(a);return!0};Array.prototype["delete"]=function(a,b){var c=this.find(a,b);return-1!==c?(this.splice(c,1),!0):!1};Array.prototype.find=function(a,b){for(var b=b||this.contentEquals||Object.equals,c=0;c<this.length;c++)if(c in this&&b(this[c],a))return c;return-1};
Array.prototype.findLast=function(a,b){var b=b||this.contentEquals||Object.equals,c=this.length;do if(c--,c in this&&b(this[c],a))return c;while(0<c);return-1};Array.prototype.swap=function(a,b,c){var d=Array.prototype.slice.call(arguments,0,2);c&&d.push.apply(d,c);return this.splice.apply(this,d)};Array.prototype.toArray=Reducible$$module$array.toArray;Array.prototype.toObject=Reducible$$module$array.toArray;Array.prototype.addEach=Reducible$$module$array.addEach;Array.prototype.equals=Reducible$$module$array.equals;
Array.prototype.compare=Reducible$$module$array.compare;Array.prototype.any=Reducible$$module$array.any;Array.prototype.all=Reducible$$module$array.all;Array.prototype.min=Reducible$$module$array.min;Array.prototype.max=Reducible$$module$array.max;Array.prototype.sum=Reducible$$module$array.sum;Array.prototype.average=Reducible$$module$array.average;Array.prototype.unique=Reducible$$module$array.unique;Array.prototype.flatten=Reducible$$module$array.flatten;Array.prototype.sorted=Reducible$$module$array.sorted;
Array.prototype.reversed=Reducible$$module$array.reversed;Array.prototype.clone=Reducible$$module$array.clone;Array.prototype.one=function(){if(0===this.length)throw Error("Can't get one element from empty array");return this[0]};Array.prototype.only=function(){if(1!==this.length)throw Error("Can't get only element of array with "+this.length+" elements.");return this[0]};Array.prototype.clear=function(){this.length=0;return this};
Array.prototype.iterate=function(a,b){return new ArrayIterator$$module$array(this,a,b)};function ArrayIterator$$module$array(a,b,c){this.array=a;this.start=null==b?0:b;this.end=c}ArrayIterator$$module$array.prototype.next=function(){if(this.start===(null==this.end?this.array.length:this.end))throw StopIteration;return this.array[this.start++]};module$array.module$exports&&(module$array=module$array.module$exports);var module$dict={};module$object;var Reducible$$module$dict=module$reducible,AbstractMap$$module$dict=module$abstract_map;module$dict.module$exports=Dict$$module$dict;function Dict$$module$dict(a,b){if(!(this instanceof Dict$$module$dict))return new Dict$$module$dict(a,b);this.content=b=b||Function.noop;this.store={};this.length=0;this.addEach(a)}function mangle$$module$dict(a){return"~"+a}function unmangle$$module$dict(a){return a.slice(1)}
Dict$$module$dict.prototype.constructClone=function(a){return new this.constructor(a,this.mangle,this.content)};Dict$$module$dict.prototype.assertString=function(a){if("string"!==typeof a)throw new TypeError("key must be a string.");};Dict$$module$dict.prototype.get=function(a,b){this.assertString(a);var c=mangle$$module$dict(a);return c in this.store?this.store[c]:1<arguments.length?b:this.content()};
Dict$$module$dict.prototype.set=function(a,b){this.assertString(a);var c=mangle$$module$dict(a);if(c in this.store)return this.store[c]=b,!1;this.length++;this.store[c]=b;return!0};Dict$$module$dict.prototype.has=function(a){this.assertString(a);return mangle$$module$dict(a)in this.store};Dict$$module$dict.prototype["delete"]=function(a){this.assertString(a);return mangle$$module$dict(a)in this.store?(delete this.store[mangle$$module$dict(a)],this.length--,!0):!1};
Dict$$module$dict.prototype.clear=function(){for(var a in this.store)delete this.store[a];this.length=0};Dict$$module$dict.prototype.reduce=function(a,b,c){for(var d in this.store)b=a.call(c,b,this.store[d],unmangle$$module$dict(d),this);return b};Dict$$module$dict.prototype.addEach=AbstractMap$$module$dict.addEach;Dict$$module$dict.prototype.keys=AbstractMap$$module$dict.keys;Dict$$module$dict.prototype.values=AbstractMap$$module$dict.values;Dict$$module$dict.prototype.items=AbstractMap$$module$dict.items;
Dict$$module$dict.prototype.forEach=Reducible$$module$dict.forEach;Dict$$module$dict.prototype.map=Reducible$$module$dict.map;Dict$$module$dict.prototype.toArray=Reducible$$module$dict.toArray;Dict$$module$dict.prototype.toObject=Reducible$$module$dict.toObject;Dict$$module$dict.prototype.filter=Reducible$$module$dict.filter;Dict$$module$dict.prototype.every=Reducible$$module$dict.every;Dict$$module$dict.prototype.some=Reducible$$module$dict.some;Dict$$module$dict.prototype.all=Reducible$$module$dict.all;
Dict$$module$dict.prototype.any=Reducible$$module$dict.any;Dict$$module$dict.prototype.min=Reducible$$module$dict.min;Dict$$module$dict.prototype.max=Reducible$$module$dict.max;Dict$$module$dict.prototype.sum=Reducible$$module$dict.sum;Dict$$module$dict.prototype.average=Reducible$$module$dict.average;Dict$$module$dict.prototype.concat=Reducible$$module$dict.concat;Dict$$module$dict.prototype.flatten=Reducible$$module$dict.flatten;Dict$$module$dict.prototype.sorted=Reducible$$module$dict.sorted;
Dict$$module$dict.prototype.zip=Reducible$$module$dict.zip;Dict$$module$dict.prototype.clone=Reducible$$module$dict.clone;module$dict.module$exports&&(module$dict=module$dict.module$exports);var module$iterator={};module$iterator.module$exports=Iterator$$module$iterator;var Reducible$$module$iterator=module$reducible;
function Iterator$$module$iterator(a){if(!(this instanceof Iterator$$module$iterator))return new Iterator$$module$iterator(a);if(Array.isArray(a)||"string"===typeof a)return Iterator$$module$iterator.iterate(a);a=Object(a);if(a instanceof Iterator$$module$iterator)return a;if(a.next)this.next=function(){return a.next()};else if(a.iterate){var b=a.iterate();this.next=function(){return b.next()}}else if("[object Function]"===Object.prototype.toString.call(a))this.next=a;else throw new TypeError("Cannot iterate");
}Iterator$$module$iterator.prototype.constructClone=function(a){var b=[];Reducible$$module$iterator.addEach.call(b,a);return b};Iterator$$module$iterator.prototype.mapIterator=function(a,b){var c=Iterator$$module$iterator(this),d=0;if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError;return new c.constructor(function(){return a.call(b,c.next(),d++,c)})};
Iterator$$module$iterator.prototype.filterIterator=function(a,b){var c=Iterator$$module$iterator(this),d=0;if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError;return new c.constructor(function(){for(var e;;)if(e=c.next(),a.call(b,e,d++,c))return e})};
Iterator$$module$iterator.prototype.reduce=function(a){var b=Iterator$$module$iterator(this),c=arguments[1],d=arguments[2],e=0,f;if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError;try{f=b.next(),c=1<arguments.length?a.call(d,c,f,e,b):f,e++}catch(g){if(isStopIteration(g)){if(1<arguments.length)return arguments[1];throw TypeError("cannot reduce a value from an empty iterator with no initial value");}throw g;}try{for(;;)f=b.next(),c=a.call(d,c,f,e,b),e++}catch(i){if(isStopIteration(i))return c;
throw i;}};Iterator$$module$iterator.prototype.forEach=Reducible$$module$iterator.forEach;Iterator$$module$iterator.prototype.map=Reducible$$module$iterator.map;Iterator$$module$iterator.prototype.toArray=Reducible$$module$iterator.toArray;Iterator$$module$iterator.prototype.toObject=Reducible$$module$iterator.toObject;Iterator$$module$iterator.prototype.filter=Reducible$$module$iterator.filter;Iterator$$module$iterator.prototype.all=Reducible$$module$iterator.all;
Iterator$$module$iterator.prototype.any=Reducible$$module$iterator.any;Iterator$$module$iterator.prototype.min=Reducible$$module$iterator.min;Iterator$$module$iterator.prototype.max=Reducible$$module$iterator.max;Iterator$$module$iterator.prototype.sum=Reducible$$module$iterator.sum;Iterator$$module$iterator.prototype.average=Reducible$$module$iterator.average;Iterator$$module$iterator.prototype.flatten=Reducible$$module$iterator.flatten;
Iterator$$module$iterator.prototype.every=function(a){var b=Iterator$$module$iterator(this),c=!0;if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError;b.mapIterator.apply(b,arguments).forEach(function(a){if(!a)throw c=!1,StopIteration;});return c};
Iterator$$module$iterator.prototype.some=function(a){var b=Iterator$$module$iterator(this),c=!1;if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError;b.mapIterator.apply(b,arguments).forEach(function(a){if(a)throw c=!0,StopIteration;});return c};Iterator$$module$iterator.prototype.concat=function(){return Iterator$$module$iterator.concat(Array.prototype.concat.apply(this,arguments))};
Iterator$$module$iterator.prototype.dropWhile=function(a,b){var c=Iterator$$module$iterator(this),d=!1,e;if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError;c.forEach(function(f,g){if(!a.call(b,f,g,c))throw d=!0,e=f,StopIteration;});return d?c.constructor([e]).concat(c):c.constructor([])};
Iterator$$module$iterator.prototype.takeWhile=function(a,b){var c=Iterator$$module$iterator(this);if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError;return c.mapIterator(function(d,e){if(!a.call(b,d,e,c))throw StopIteration;return d})};
Iterator$$module$iterator.prototype.filterIterator=function(a,b){var c=Iterator$$module$iterator(this),d=0;if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError;return new c.constructor(function(){for(var e;;)if(e=c.next(),a.call(b,e,d++,c))return e})};Iterator$$module$iterator.prototype.zip=function(){return Iterator$$module$iterator.transpose(Array.prototype.concat.apply(this,arguments))};Iterator$$module$iterator.prototype.enumerate=function(a){return Iterator$$module$iterator.count(a).zip(this)};
Iterator$$module$iterator.iterate=function(a){var b;b=0;return new Iterator$$module$iterator(function(){if("object"===typeof a)for(;!(b in a);){if(b>=a.length)throw StopIteration;b+=1}else if(b>=a.length)throw StopIteration;var c=a[b];b+=1;return c})};
Iterator$$module$iterator.cycle=function(a,b){2>arguments.length&&(b=Infinity);var c=function(){throw StopIteration;};return new Iterator$$module$iterator(function(){var d;try{return c()}catch(e){if(isStopIteration(e)){if(0>=b)throw e;b--;d=Iterator$$module$iterator.iterate(a);c=d.next.bind(d);return c()}throw e;}})};
Iterator$$module$iterator.concat=function(a){var a=Iterator$$module$iterator(a),b=function(){throw StopIteration;};return new Iterator$$module$iterator(function(){var c;try{return b()}catch(d){if(isStopIteration(d))return c=Iterator$$module$iterator(a.next()),b=c.next.bind(c),b();throw d;}})};
Iterator$$module$iterator.transpose=function(a){a=Iterator$$module$iterator(a).map(Iterator$$module$iterator);return 1>a.length?new Iterator$$module$iterator([]):new Iterator$$module$iterator(function(){var b,c=a.map(function(a){try{return a.next()}catch(c){if(isStopIteration(c))b=!0;else throw c;}});if(b)throw StopIteration;return c})};Iterator$$module$iterator.zip=function(){return Iterator$$module$iterator.transpose(Array.prototype.slice.call(arguments))};Iterator$$module$iterator.chain=function(){return Iterator$$module$iterator.concat(Array.prototype.slice.call(arguments))};
Iterator$$module$iterator.range=function(a,b,c){3>arguments.length&&(c=1);2>arguments.length&&(b=a,a=0);a=a||0;return new Iterator$$module$iterator(function(){if(a>=b)throw StopIteration;if(isNaN(a))throw"";var d=a;a=a+c;return d})};Iterator$$module$iterator.count=function(a,b){return Iterator$$module$iterator.range(a,Infinity,b||1)};Iterator$$module$iterator.repeat=function(a,b){2>arguments.length&&(b=Infinity);return(new Iterator$$module$iterator.range(+b)).mapIterator(function(){return a})};
"undefined"===typeof isStopIteration&&(global.isStopIteration=function(a){return"[object StopIteration]"===Object.prototype.toString.call(a)});"undefined"===typeof StopIteration&&(global.StopIteration={},Object.prototype.toString=function(a){return function(){return this===global.StopIteration||this instanceof global.ReturnValue?"[object StopIteration]":a.call(this,arguments)}}(Object.prototype.toString));
"undefined"===typeof ReturnValue&&(global.ReturnValue=function(a){if(!(this instanceof global.ReturnValue))return new global.ReturnValue(a);this.value=a});module$iterator.module$exports&&(module$iterator=module$iterator.module$exports);var module$list={};module$list.module$exports=List$$module$list;module$object;var Reducible$$module$list=module$reducible,Observable$$module$list=module$observable;function List$$module$list(a,b,c){if(!(this instanceof List$$module$list))return new List$$module$list(a,b,c);var d=this.head=new this.Node;d.next=d;d.prev=d;this.contentEquals=b||Object.equals;this.content=c||Function.noop;this.length=0;this.addEach(a)}
List$$module$list.prototype.constructClone=function(a){return new this.constructor(a,this.contentEquals,this.content)};List$$module$list.prototype.find=function(a,b){for(var b=b||this.contentEquals,c=this.head,d=c.next;d!==c;){if(b(d.value,a))return d;d=d.next}};List$$module$list.prototype.findLast=function(a,b){for(var b=b||this.contentEquals,c=this.head,d=c.prev;d!==c;){if(b(d.value,a))return d;d=d.prev}};List$$module$list.prototype.has=function(a,b){return!!this.find(a,b)};
List$$module$list.prototype.get=function(a,b){var c=this.find(a,b);return c?c.value:this.content()};List$$module$list.prototype["delete"]=function(a,b){var c=this.findLast(a,b);return c?(this.isObserved&&this.dispatchBeforeContentChange([],[a]),c["delete"](),this.length--,this.isObserved&&this.dispatchContentChange([],[a]),!0):!1};List$$module$list.prototype.clear=function(){this.head.next=this.head.prev=this.head};
List$$module$list.prototype.add=function(a){this.isObserved&&this.dispatchBeforeContentChange([a],[]);this.head.addBefore(new this.Node(a));this.length++;this.isObserved&&this.dispatchContentChange([a],[]);return!0};List$$module$list.prototype.push=function(){for(var a=this.head,b=0;b<arguments.length;b++){var c=arguments[b];this.isObserved&&this.dispatchBeforeContentChange([c],[]);var d=new this.Node(c);a.addBefore(d);this.length++;this.isObserved&&this.dispatchContentChange([c],[])}};
List$$module$list.prototype.unshift=function(){for(var a=this.head,b=0;b<arguments.length;b++){var c=arguments[b],d=new this.Node(c);a.addAfter(d);this.length++;this.isObserved&&this.dispatchContentChange([c],[]);a=d}};List$$module$list.prototype.pop=function(){var a,b=this.head;b.prev!==b&&(a=b.prev.value,this.isObserved&&this.dispatchBeforeContentChange([],[a]),b.prev["delete"](),this.length--,this.isObserved&&this.dispatchContentChange([],[a]));return a};
List$$module$list.prototype.shift=function(){var a,b=this.head;b.prev!==b&&(a=b.next.value,this.isObserved&&this.dispatchBeforeContentChange([],[a]),b.next["delete"](),this.length--,this.isObserved&&this.dispatchContentChange([],[a]));return a};List$$module$list.prototype.scan=function(a,b){var c=this.head;if("number"===typeof a){var d=a;if(0<=d)for(a=c.next;d&&!(d--,a=a.next,a==c););else for(a=c;0>d&&!(d++,a=a.prev,a==c););return a}return a||b};
List$$module$list.prototype.slice=function(a,b){for(var c=[],d=this.head,a=this.scan(a,d.next),b=this.scan(b,d);a!==b&&a!==d;)c.push(a.value),a=a.next;return c};List$$module$list.prototype.splice=function(a,b){return this.swap(a,b,Array.prototype.slice.call(arguments,2))};
List$$module$list.prototype.swap=function(a,b,c){var d=[],e=a,a=this.scan(a,this.head);for(void 0===b&&(b=Infinity);b--&&0<=b&&a!==this.head;)d.push(a.value),a["delete"](),a=a.next,this.length--;if(c){null===e&&a===this.head&&(a=this.head.next);for(b=0;b<c.length;b++)e=new this.Node(c[b]),a.addBefore(e);this.length+=c.length}return d};List$$module$list.prototype.reverse=function(){var a=this.head;do{var b=a.next;a.next=a.prev;a.prev=b;a=a.next}while(a!==this.head);return this};
List$$module$list.prototype.reduce=function(a,b,c){for(var d=this.head,e=d.next;e!==d;)b=a.call(c,b,e.value,e,this),e=e.next;return b};List$$module$list.prototype.reduceRight=function(a,b,c){for(var d=this.head,e=d.prev;e!==d;)b=a.call(c,b,e.value,e,this),e=e.prev;return b};List$$module$list.prototype.addEach=Reducible$$module$list.addEach;List$$module$list.prototype.forEach=Reducible$$module$list.forEach;List$$module$list.prototype.map=Reducible$$module$list.map;
List$$module$list.prototype.toArray=Reducible$$module$list.toArray;List$$module$list.prototype.filter=Reducible$$module$list.filter;List$$module$list.prototype.every=Reducible$$module$list.every;List$$module$list.prototype.some=Reducible$$module$list.some;List$$module$list.prototype.all=Reducible$$module$list.all;List$$module$list.prototype.any=Reducible$$module$list.any;List$$module$list.prototype.min=Reducible$$module$list.min;List$$module$list.prototype.max=Reducible$$module$list.max;
List$$module$list.prototype.sum=Reducible$$module$list.sum;List$$module$list.prototype.average=Reducible$$module$list.average;List$$module$list.prototype.concat=Reducible$$module$list.concat;List$$module$list.prototype.flatten=Reducible$$module$list.flatten;List$$module$list.prototype.zip=Reducible$$module$list.zip;List$$module$list.prototype.equals=Reducible$$module$list.equals;List$$module$list.prototype.compare=Reducible$$module$list.compare;List$$module$list.prototype.sorted=Reducible$$module$list.sorted;
List$$module$list.prototype.reversed=Reducible$$module$list.reversed;List$$module$list.prototype.clone=Reducible$$module$list.clone;List$$module$list.prototype.getContentChangeDescriptor=Observable$$module$list.getContentChangeDescriptor;List$$module$list.prototype.addContentChangeListener=Observable$$module$list.addContentChangeListener;List$$module$list.prototype.removeContentChangeListener=Observable$$module$list.removeContentChangeListener;List$$module$list.prototype.dispatchContentChange=Observable$$module$list.dispatchContentChange;
List$$module$list.prototype.addBeforeContentChangeListener=Observable$$module$list.addBeforeContentChangeListener;List$$module$list.prototype.removeBeforeContentChangeListener=Observable$$module$list.removeBeforeContentChangeListener;List$$module$list.prototype.dispatchBeforeContentChange=Observable$$module$list.dispatchBeforeContentChange;
List$$module$list.prototype.equals=function(a,b){b=b||this.contentEquals||Object.equals;return this===a?!0:this.length===a.length&&this.zip(a).every(function(a){return b(a[0],a[1])})};List$$module$list.prototype.one=function(){if(this.head===this.head.next)throw Error("Can't get one value from empty list");return this.head.next.value};
List$$module$list.prototype.only=function(){if(this.head===this.head.next)throw Error("Can't get only value in empty list");if(this.head.prev!==this.head.next)throw Error("Can't get only value in list with multiple values");return this.head.next.value};List$$module$list.prototype.iterate=function(){return new ListIterator$$module$list(this.head)};function ListIterator$$module$list(a){this.head=a;this.at=a.next}
ListIterator$$module$list.prototype.next=function(){if(this.at===this.head)throw StopIteration;var a=this.at.value;this.at=this.at.next;return a};List$$module$list.prototype.Node=Node$$module$list;function Node$$module$list(a){this.value=a;this.next=this.prev=null}Node$$module$list.prototype["delete"]=function(){this.prev.next=this.next;this.next.prev=this.prev};Node$$module$list.prototype.addBefore=function(a){var b=this.prev;this.prev=a;a.prev=b;b.next=a;a.next=this};
Node$$module$list.prototype.addAfter=function(a){var b=this.next;this.next=a;a.next=b;b.prev=a;a.prev=this};module$list.module$exports&&(module$list=module$list.module$exports);var module$fast_set={};module$object;var Dict$$module$fast_set=module$dict,List$$module$fast_set=module$list,Reducible$$module$fast_set=module$reducible,Observable$$module$fast_set=module$observable,TreeLog$$module$fast_set=module$tree_log,Iterator$$module$fast_set=module$iterator,object_has$$module$fast_set=Object.prototype.hasOwnProperty;module$fast_set.module$exports=FastSet$$module$fast_set;
function FastSet$$module$fast_set(a,b,c,d){if(!(this instanceof FastSet$$module$fast_set))return new FastSet$$module$fast_set(a,b,c);b=b||Object.equals;c=c||Object.hash;d=d||Function.noop;this.contentEquals=b;this.contentHash=c;this.content=d;this.buckets=new this.Buckets(null,this.Bucket);this.length=0;this.addEach(a)}FastSet$$module$fast_set.prototype.constructClone=function(a){return new this.constructor(a,this.contentEquals,this.contentHash,this.content)};
FastSet$$module$fast_set.prototype.Buckets=Dict$$module$fast_set;FastSet$$module$fast_set.prototype.Bucket=List$$module$fast_set;FastSet$$module$fast_set.prototype.has=function(a){var b=this.contentHash(a);return this.buckets.get(b).has(a)};FastSet$$module$fast_set.prototype.get=function(a){var b=this.contentHash(a),c=this.buckets;return c.has(b)?c.get(b).get(a):this.content(a)};
FastSet$$module$fast_set.prototype["delete"]=function(a){var b=this.contentHash(a),c=this.buckets;if(c.has(b)){var d=c.get(b);if(d["delete"](a)){this.isObserved&&this.dispatchBeforeContentChange([],[a]);this.length--;if(0===d.length)c["delete"](b);this.isObserved&&this.dispatchContentChange([],[a]);return!0}}return!1};FastSet$$module$fast_set.prototype.clear=function(){this.buckets.clear();this.length=0};
FastSet$$module$fast_set.prototype.add=function(a){var b=this.contentHash(a),c=this.buckets;c.has(b)||c.set(b,new this.Bucket(null,this.contentEquals));return!c.get(b).has(a)?(this.isObserved&&this.dispatchBeforeContentChange([a],[]),c.get(b).add(a),this.length++,this.isObserved&&this.dispatchContentChange([a],[]),!0):!1};FastSet$$module$fast_set.prototype.reduce=function(a,b,c){return this.buckets.reduce(function(b,e){return e.reduce(a,b,c)},b)};FastSet$$module$fast_set.prototype.addEach=Reducible$$module$fast_set.addEach;
FastSet$$module$fast_set.prototype.forEach=Reducible$$module$fast_set.forEach;FastSet$$module$fast_set.prototype.map=Reducible$$module$fast_set.map;FastSet$$module$fast_set.prototype.toArray=Reducible$$module$fast_set.toArray;FastSet$$module$fast_set.prototype.filter=Reducible$$module$fast_set.filter;FastSet$$module$fast_set.prototype.every=Reducible$$module$fast_set.every;FastSet$$module$fast_set.prototype.some=Reducible$$module$fast_set.some;FastSet$$module$fast_set.prototype.all=Reducible$$module$fast_set.all;
FastSet$$module$fast_set.prototype.any=Reducible$$module$fast_set.any;FastSet$$module$fast_set.prototype.min=Reducible$$module$fast_set.min;FastSet$$module$fast_set.prototype.max=Reducible$$module$fast_set.max;FastSet$$module$fast_set.prototype.sum=Reducible$$module$fast_set.sum;FastSet$$module$fast_set.prototype.average=Reducible$$module$fast_set.average;FastSet$$module$fast_set.prototype.concat=Reducible$$module$fast_set.concat;FastSet$$module$fast_set.prototype.flatten=Reducible$$module$fast_set.flatten;
FastSet$$module$fast_set.prototype.zip=Reducible$$module$fast_set.zip;FastSet$$module$fast_set.prototype.sorted=Reducible$$module$fast_set.sorted;FastSet$$module$fast_set.prototype.clone=Reducible$$module$fast_set.clone;FastSet$$module$fast_set.prototype.getContentChangeDescriptor=Observable$$module$fast_set.getContentChangeDescriptor;FastSet$$module$fast_set.prototype.addContentChangeListener=Observable$$module$fast_set.addContentChangeListener;
FastSet$$module$fast_set.prototype.removeContentChangeListener=Observable$$module$fast_set.removeContentChangeListener;FastSet$$module$fast_set.prototype.dispatchContentChange=Observable$$module$fast_set.dispatchContentChange;FastSet$$module$fast_set.prototype.addBeforeContentChangeListener=Observable$$module$fast_set.addBeforeContentChangeListener;FastSet$$module$fast_set.prototype.removeBeforeContentChangeListener=Observable$$module$fast_set.removeBeforeContentChangeListener;
FastSet$$module$fast_set.prototype.dispatchBeforeContentChange=Observable$$module$fast_set.dispatchBeforeContentChange;FastSet$$module$fast_set.prototype.equals=function(a){var b=this;return Object(a)===a&&"function"===typeof a.reduce&&"number"===typeof a.length&&this.length===a.length&&a.reduce(function(a,d){return a&&b.has(d)},!0)};FastSet$$module$fast_set.prototype.iterate=function(){var a=this.buckets,b=a.keys();return Iterator$$module$fast_set.concat(b.map(function(b){return a.get(b).iterate()}))};
FastSet$$module$fast_set.prototype.log=function(a,b,c,d){a=a||TreeLog$$module$fast_set.unicodeSharp;b=b||this.logNode;c||(c=console.log,d=console);var c=c.bind(d),e=this.buckets,f=e.keys();f.forEach(function(g,i){var j,h;if(i===0){j=a.branchDown;h=a.strafe}else if(i===f.length-1){j=a.fromAbove;h=" "}else{j=a.fromBoth;h=a.strafe}var k=e.get(g);c.call(d,j+a.through+a.branchDown+" "+g);k.forEach(function(e,f){var g;g=f===k.head.prev?a.fromAbove:a.fromBoth;b(e,function(b){c.call(d,h+" "+g+a.through+a.through+
" "+b)},function(a){c.call(d,h+"     "+a)})})})};FastSet$$module$fast_set.prototype.logNode=function(a,b,c){a=a.value;Object(a)===a?b.call(c,JSON.stringify(a)):b.call(c,a)};module$fast_set.module$exports&&(module$fast_set=module$fast_set.module$exports);var module$fast_map={};module$object;var Set$$module$fast_map=module$fast_set,Reducible$$module$fast_map=module$reducible,AbstractMap$$module$fast_map=module$abstract_map;module$fast_map.module$exports=FastMap$$module$fast_map;
function FastMap$$module$fast_map(a,b,c,d){if(!(this instanceof FastMap$$module$fast_map))return new FastMap$$module$fast_map(a,b,c);b=b||Object.equals;c=c||Object.hash;d=d||Function.noop;this.contentEquals=b;this.contentHash=c;this.content=d;this.contentSet=new Set$$module$fast_map(void 0,function(a,c){return b(a.key,c.key)},function(a){return c(a.key)});this.length=0;this.addEach(a)}
FastMap$$module$fast_map.prototype.constructClone=function(a){return new this.constructor(a,this.contentEquals,this.contentHash,this.content)};FastMap$$module$fast_map.prototype.addEach=AbstractMap$$module$fast_map.addEach;FastMap$$module$fast_map.prototype.has=AbstractMap$$module$fast_map.has;FastMap$$module$fast_map.prototype.get=AbstractMap$$module$fast_map.get;FastMap$$module$fast_map.prototype.set=AbstractMap$$module$fast_map.set;FastMap$$module$fast_map.prototype["delete"]=AbstractMap$$module$fast_map["delete"];
FastMap$$module$fast_map.prototype.clear=AbstractMap$$module$fast_map.clear;FastMap$$module$fast_map.prototype.reduce=AbstractMap$$module$fast_map.reduce;FastMap$$module$fast_map.prototype.keys=AbstractMap$$module$fast_map.keys;FastMap$$module$fast_map.prototype.values=AbstractMap$$module$fast_map.values;FastMap$$module$fast_map.prototype.items=AbstractMap$$module$fast_map.items;FastMap$$module$fast_map.prototype.Item=AbstractMap$$module$fast_map.Item;FastMap$$module$fast_map.prototype.forEach=Reducible$$module$fast_map.forEach;
FastMap$$module$fast_map.prototype.map=Reducible$$module$fast_map.map;FastMap$$module$fast_map.prototype.toArray=Reducible$$module$fast_map.toArray;FastMap$$module$fast_map.prototype.toObject=Reducible$$module$fast_map.toObject;FastMap$$module$fast_map.prototype.filter=Reducible$$module$fast_map.filter;FastMap$$module$fast_map.prototype.every=Reducible$$module$fast_map.every;FastMap$$module$fast_map.prototype.some=Reducible$$module$fast_map.some;FastMap$$module$fast_map.prototype.all=Reducible$$module$fast_map.all;
FastMap$$module$fast_map.prototype.any=Reducible$$module$fast_map.any;FastMap$$module$fast_map.prototype.min=Reducible$$module$fast_map.min;FastMap$$module$fast_map.prototype.max=Reducible$$module$fast_map.max;FastMap$$module$fast_map.prototype.sum=Reducible$$module$fast_map.sum;FastMap$$module$fast_map.prototype.average=Reducible$$module$fast_map.average;FastMap$$module$fast_map.prototype.concat=Reducible$$module$fast_map.concat;FastMap$$module$fast_map.prototype.flatten=Reducible$$module$fast_map.flatten;
FastMap$$module$fast_map.prototype.sorted=Reducible$$module$fast_map.sorted;FastMap$$module$fast_map.prototype.zip=Reducible$$module$fast_map.zip;FastMap$$module$fast_map.prototype.clone=Reducible$$module$fast_map.clone;FastMap$$module$fast_map.prototype.log=function(a,b){b=b||this.stringify;this.contentSet.log(a,b)};FastMap$$module$fast_map.prototype.stringify=function(a,b){return b+JSON.stringify(a.key)+": "+JSON.stringify(a.value)};module$fast_map.module$exports&&(module$fast_map=module$fast_map.module$exports);var module$set={};module$object;var List$$module$set=module$list,FastSet$$module$set=module$fast_set,Reducible$$module$set=module$reducible,Observable$$module$set=module$observable;module$set.module$exports=Set$$module$set;
function Set$$module$set(a,b,c,d){if(!(this instanceof Set$$module$set))return new Set$$module$set(a,b,c);b=b||Object.equals;c=c||Object.hash;d=d||Function.noop;this.contentEquals=b;this.contentHash=c;this.contentList=new List$$module$set(void 0,b);this.content=d;this.contentSet=new FastSet$$module$set(void 0,function(a,c){return b(a.value,c.value)},function(a){return c(a.value)});this.length=0;this.addEach(a)}
Set$$module$set.prototype.constructClone=function(a){return new this.constructor(a,this.contentEquals,this.contentHash,this.content)};Set$$module$set.prototype.has=function(a){a=new this.contentList.Node(a);return this.contentSet.has(a)};Set$$module$set.prototype.get=function(a){var b=new this.contentList.Node(a);return(b=this.contentSet.get(b))?b.value:this.content(a)};
Set$$module$set.prototype.add=function(a){var b=new this.contentList.Node(a);return!this.contentSet.has(b)?(this.contentList.add(a),b=this.contentList.head.prev,this.contentSet.add(b),this.length++,!0):!1};Set$$module$set.prototype["delete"]=function(a){a=new this.contentList.Node(a);return this.contentSet.has(a)?(a=this.contentSet.get(a),this.contentSet["delete"](a),a["delete"](),this.length--,!0):!1};
Set$$module$set.prototype.clear=function(){this.contentSet.clear();this.contentList.clear();this.length=0};Set$$module$set.prototype.reduce=function(){var a=this.contentList;return a.reduce.apply(a,arguments)};Set$$module$set.prototype.reduceRight=function(){var a=this.contentList;return a.reduceRight.apply(a,arguments)};Set$$module$set.prototype.addEach=Reducible$$module$set.addEach;Set$$module$set.prototype.forEach=Reducible$$module$set.forEach;Set$$module$set.prototype.map=Reducible$$module$set.map;
Set$$module$set.prototype.toArray=Reducible$$module$set.toArray;Set$$module$set.prototype.filter=Reducible$$module$set.filter;Set$$module$set.prototype.every=Reducible$$module$set.every;Set$$module$set.prototype.some=Reducible$$module$set.some;Set$$module$set.prototype.all=Reducible$$module$set.all;Set$$module$set.prototype.any=Reducible$$module$set.any;Set$$module$set.prototype.min=Reducible$$module$set.min;Set$$module$set.prototype.max=Reducible$$module$set.max;Set$$module$set.prototype.sum=Reducible$$module$set.sum;
Set$$module$set.prototype.average=Reducible$$module$set.average;Set$$module$set.prototype.concat=Reducible$$module$set.concat;Set$$module$set.prototype.flatten=Reducible$$module$set.flatten;Set$$module$set.prototype.zip=Reducible$$module$set.zip;Set$$module$set.prototype.sorted=Reducible$$module$set.sorted;Set$$module$set.prototype.clone=Reducible$$module$set.clone;
Set$$module$set.prototype.makeObservable=function(){var a=this;this.contentSet.addBeforeContentChangeListener(function(){a.dispatchBeforeContentChange.apply(a,arguments)});this.contentSet.addContentChangeListener(function(){a.dispatchContentChange.apply(a,arguments)});this.isObservable=!0};Set$$module$set.prototype.getContentChangeDescriptor=Observable$$module$set.getContentChangeDescriptor;Set$$module$set.prototype.addContentChangeListener=Observable$$module$set.addContentChangeListener;
Set$$module$set.prototype.removeContentChangeListener=Observable$$module$set.removeContentChangeListener;Set$$module$set.prototype.dispatchContentChange=Observable$$module$set.dispatchContentChange;Set$$module$set.prototype.addBeforeContentChangeListener=Observable$$module$set.addBeforeContentChangeListener;Set$$module$set.prototype.removeBeforeContentChangeListener=Observable$$module$set.removeBeforeContentChangeListener;Set$$module$set.prototype.dispatchBeforeContentChange=Observable$$module$set.dispatchBeforeContentChange;
Set$$module$set.prototype.equals=function(a){return this.contentSet.equals(a)};Set$$module$set.prototype.iterate=function(){return this.contentList.iterate()};Set$$module$set.prototype.log=function(){var a=this.contentSet;return a.log.apply(a,arguments)};module$set.module$exports&&(module$set=module$set.module$exports);var module$lru_set={};module$object;var Set$$module$lru_set=module$set,Reducible$$module$lru_set=module$reducible,Observable$$module$lru_set=module$observable;module$lru_set.module$exports=LruSet$$module$lru_set;
function LruSet$$module$lru_set(a,b,c,d,e){if(!(this instanceof LruSet$$module$lru_set))return new LruSet$$module$lru_set(a,b,c,d);b=b||Infinity;c=c||Object.equals;d=d||Object.hash;e=e||Function.noop;this.contentSet=new Set$$module$lru_set(void 0,c,d);this.contentEquals=c;this.contentHash=d;this.content=e;this.maxLength=b;this.length=0;this.addEach(a)}LruSet$$module$lru_set.prototype.constructClone=function(a){return new this.constructor(a,this.maxLength,this.contentEquals,this.contentHash,this.content)};
LruSet$$module$lru_set.prototype.has=function(a){return this.contentSet.has(a)};LruSet$$module$lru_set.prototype.get=function(a){a=this.contentSet.get(a);void 0!==a?(this.contentSet["delete"](a),this.contentSet.add(a)):a=this.content();return a};
LruSet$$module$lru_set.prototype.add=function(a){this.contentSet.has(a)&&(this.contentSet["delete"](a),this.length--);this.contentSet.add(a);this.length++;return this.contentSet.length>this.maxLength?(this.contentSet["delete"](this.contentSet.contentList.head.next.value),this.length--,!1):!0};LruSet$$module$lru_set.prototype["delete"]=function(a){return this.contentSet["delete"](a)?(this.length--,!0):!1};LruSet$$module$lru_set.prototype.clear=function(){this.contentSet.clear();this.length=0};
LruSet$$module$lru_set.prototype.reduce=function(){var a=this.contentSet;return a.reduce.apply(a,arguments)};LruSet$$module$lru_set.prototype.reduceRight=function(){var a=this.contentSet;return a.reduceRight.apply(a,arguments)};LruSet$$module$lru_set.prototype.addEach=Reducible$$module$lru_set.addEach;LruSet$$module$lru_set.prototype.forEach=Reducible$$module$lru_set.forEach;LruSet$$module$lru_set.prototype.map=Reducible$$module$lru_set.map;LruSet$$module$lru_set.prototype.toArray=Reducible$$module$lru_set.toArray;
LruSet$$module$lru_set.prototype.filter=Reducible$$module$lru_set.filter;LruSet$$module$lru_set.prototype.every=Reducible$$module$lru_set.every;LruSet$$module$lru_set.prototype.some=Reducible$$module$lru_set.some;LruSet$$module$lru_set.prototype.all=Reducible$$module$lru_set.all;LruSet$$module$lru_set.prototype.any=Reducible$$module$lru_set.any;LruSet$$module$lru_set.prototype.min=Reducible$$module$lru_set.min;LruSet$$module$lru_set.prototype.max=Reducible$$module$lru_set.max;
LruSet$$module$lru_set.prototype.sum=Reducible$$module$lru_set.sum;LruSet$$module$lru_set.prototype.average=Reducible$$module$lru_set.average;LruSet$$module$lru_set.prototype.concat=Reducible$$module$lru_set.concat;LruSet$$module$lru_set.prototype.flatten=Reducible$$module$lru_set.flatten;LruSet$$module$lru_set.prototype.zip=Reducible$$module$lru_set.zip;LruSet$$module$lru_set.prototype.sorted=Reducible$$module$lru_set.sorted;LruSet$$module$lru_set.prototype.clone=Reducible$$module$lru_set.clone;
LruSet$$module$lru_set.prototype.makeObservable=function(){var a=this;this.contentSet.addBeforeContentChangeListener(function(){a.dispatchBeforeContentChange.apply(a,arguments)});this.contentSet.addContentChangeListener(function(){a.dispatchContentChange.apply(a,arguments)});this.isObservable=!0};LruSet$$module$lru_set.prototype.getContentChangeDescriptor=Observable$$module$lru_set.getContentChangeDescriptor;LruSet$$module$lru_set.prototype.addContentChangeListener=Observable$$module$lru_set.addContentChangeListener;
LruSet$$module$lru_set.prototype.removeContentChangeListener=Observable$$module$lru_set.removeContentChangeListener;LruSet$$module$lru_set.prototype.dispatchContentChange=Observable$$module$lru_set.dispatchContentChange;LruSet$$module$lru_set.prototype.addBeforeContentChangeListener=Observable$$module$lru_set.addBeforeContentChangeListener;LruSet$$module$lru_set.prototype.removeBeforeContentChangeListener=Observable$$module$lru_set.removeBeforeContentChangeListener;
LruSet$$module$lru_set.prototype.dispatchBeforeContentChange=Observable$$module$lru_set.dispatchBeforeContentChange;LruSet$$module$lru_set.prototype.equals=function(a){return this.contentSet.equals(a)};LruSet$$module$lru_set.prototype.iterate=function(){return this.contentSet.iterate()};module$lru_set.module$exports&&(module$lru_set=module$lru_set.module$exports);var module$lru_map={};module$object;var LruSet$$module$lru_map=module$lru_set,Reducible$$module$lru_map=module$reducible,AbstractMap$$module$lru_map=module$abstract_map;module$lru_map.module$exports=LruMap$$module$lru_map;
function LruMap$$module$lru_map(a,b,c,d,e){if(!(this instanceof LruMap$$module$lru_map))return new LruMap$$module$lru_map(a,b,c,d);c=c||Object.equals;d=d||Object.hash;e=e||Function.noop;this.contentEquals=c;this.contentHash=d;this.content=e;this.contentSet=new LruSet$$module$lru_map(void 0,b,function(a,b){return c(a.key,b.key)},function(a){return d(a.key)});this.length=0;this.addEach(a)}
LruMap$$module$lru_map.prototype.constructClone=function(a){return new this.constructor(a,this.maxLength,this.contentEquals,this.contentHash,this.content)};LruMap$$module$lru_map.prototype.addEach=AbstractMap$$module$lru_map.addEach;LruMap$$module$lru_map.prototype.has=AbstractMap$$module$lru_map.has;LruMap$$module$lru_map.prototype.get=AbstractMap$$module$lru_map.get;LruMap$$module$lru_map.prototype.set=AbstractMap$$module$lru_map.set;LruMap$$module$lru_map.prototype["delete"]=AbstractMap$$module$lru_map["delete"];
LruMap$$module$lru_map.prototype.clear=AbstractMap$$module$lru_map.clear;LruMap$$module$lru_map.prototype.reduce=AbstractMap$$module$lru_map.reduce;LruMap$$module$lru_map.prototype.keys=AbstractMap$$module$lru_map.keys;LruMap$$module$lru_map.prototype.values=AbstractMap$$module$lru_map.values;LruMap$$module$lru_map.prototype.items=AbstractMap$$module$lru_map.items;LruMap$$module$lru_map.prototype.Item=AbstractMap$$module$lru_map.Item;LruMap$$module$lru_map.prototype.forEach=Reducible$$module$lru_map.forEach;
LruMap$$module$lru_map.prototype.map=Reducible$$module$lru_map.map;LruMap$$module$lru_map.prototype.toArray=Reducible$$module$lru_map.toArray;LruMap$$module$lru_map.prototype.toObject=Reducible$$module$lru_map.toObject;LruMap$$module$lru_map.prototype.filter=Reducible$$module$lru_map.filter;LruMap$$module$lru_map.prototype.every=Reducible$$module$lru_map.every;LruMap$$module$lru_map.prototype.some=Reducible$$module$lru_map.some;LruMap$$module$lru_map.prototype.all=Reducible$$module$lru_map.all;
LruMap$$module$lru_map.prototype.any=Reducible$$module$lru_map.any;LruMap$$module$lru_map.prototype.min=Reducible$$module$lru_map.min;LruMap$$module$lru_map.prototype.max=Reducible$$module$lru_map.max;LruMap$$module$lru_map.prototype.sum=Reducible$$module$lru_map.sum;LruMap$$module$lru_map.prototype.average=Reducible$$module$lru_map.average;LruMap$$module$lru_map.prototype.concat=Reducible$$module$lru_map.concat;LruMap$$module$lru_map.prototype.flatten=Reducible$$module$lru_map.flatten;
LruMap$$module$lru_map.prototype.sorted=Reducible$$module$lru_map.sorted;LruMap$$module$lru_map.prototype.zip=Reducible$$module$lru_map.zip;LruMap$$module$lru_map.prototype.clone=Reducible$$module$lru_map.clone;LruMap$$module$lru_map.prototype.log=function(a,b){b=b||this.stringify;this.contentSet.log(a,b)};LruMap$$module$lru_map.prototype.stringify=function(a,b){return b+JSON.stringify(a.key)+": "+JSON.stringify(a.value)};module$lru_map.module$exports&&(module$lru_map=module$lru_map.module$exports);var module$map={};module$object;var Set$$module$map=module$set,Reducible$$module$map=module$reducible,AbstractMap$$module$map=module$abstract_map;module$map.module$exports=Map$$module$map;
function Map$$module$map(a,b,c,d){if(!(this instanceof Map$$module$map))return new Map$$module$map(a,b,c);b=b||Object.equals;c=c||Object.hash;d=d||Function.noop;this.contentEquals=b;this.contentHash=c;this.content=d;this.contentSet=new Set$$module$map(void 0,function(a,c){return b(a.key,c.key)},function(a){return c(a.key)});this.length=0;this.addEach(a)}Map$$module$map.prototype.constructClone=function(a){return new this.constructor(a,this.contentEquals,this.contentHash,this.content)};
Map$$module$map.prototype.addEach=AbstractMap$$module$map.addEach;Map$$module$map.prototype.has=AbstractMap$$module$map.has;Map$$module$map.prototype.get=AbstractMap$$module$map.get;Map$$module$map.prototype.set=AbstractMap$$module$map.set;Map$$module$map.prototype["delete"]=AbstractMap$$module$map["delete"];Map$$module$map.prototype.clear=AbstractMap$$module$map.clear;Map$$module$map.prototype.reduce=AbstractMap$$module$map.reduce;Map$$module$map.prototype.keys=AbstractMap$$module$map.keys;
Map$$module$map.prototype.values=AbstractMap$$module$map.values;Map$$module$map.prototype.items=AbstractMap$$module$map.items;Map$$module$map.prototype.Item=AbstractMap$$module$map.Item;Map$$module$map.prototype.forEach=Reducible$$module$map.forEach;Map$$module$map.prototype.map=Reducible$$module$map.map;Map$$module$map.prototype.toArray=Reducible$$module$map.toArray;Map$$module$map.prototype.toObject=Reducible$$module$map.toObject;Map$$module$map.prototype.filter=Reducible$$module$map.filter;
Map$$module$map.prototype.every=Reducible$$module$map.every;Map$$module$map.prototype.some=Reducible$$module$map.some;Map$$module$map.prototype.all=Reducible$$module$map.all;Map$$module$map.prototype.any=Reducible$$module$map.any;Map$$module$map.prototype.min=Reducible$$module$map.min;Map$$module$map.prototype.max=Reducible$$module$map.max;Map$$module$map.prototype.sum=Reducible$$module$map.sum;Map$$module$map.prototype.average=Reducible$$module$map.average;Map$$module$map.prototype.concat=Reducible$$module$map.concat;
Map$$module$map.prototype.flatten=Reducible$$module$map.flatten;Map$$module$map.prototype.sorted=Reducible$$module$map.sorted;Map$$module$map.prototype.zip=Reducible$$module$map.zip;Map$$module$map.prototype.clone=Reducible$$module$map.clone;Map$$module$map.prototype.log=function(a,b){b=b||this.stringify;this.contentSet.log(a,b)};Map$$module$map.prototype.stringify=function(a,b){return b+JSON.stringify(a.key)+": "+JSON.stringify(a.value)};module$map.module$exports&&(module$map=module$map.module$exports);var module$multi_map={},Map$$module$multi_map=module$map,AbstractMap$$module$multi_map=module$abstract_map,Reducible$$module$multi_map=module$reducible;module$multi_map.module$exports=MultiMap$$module$multi_map;
function MultiMap$$module$multi_map(a,b,c,d){if(!(this instanceof MultiMap$$module$multi_map))return new MultiMap$$module$multi_map(a,b,c,d);this.bucket=b||this.bucket;Map$$module$multi_map.call(this,a,c,d,function(a){var b=this.bucket();Map$$module$multi_map.prototype.set.call(this,a,b);return b})}MultiMap$$module$multi_map.prototype=Object.create(Map$$module$multi_map.prototype);
MultiMap$$module$multi_map.prototype.constructClone=function(a){return new this.constructor(a,this.bucket,this.contentEquals,this.contentHash)};MultiMap$$module$multi_map.prototype.set=function(a,b){var c=this.get(a);c.swap(0,c.length,b)};MultiMap$$module$multi_map.prototype.bucket=function(){return[]};module$multi_map.module$exports&&(module$multi_map=module$multi_map.module$exports);var module$sorted_set={};module$sorted_set.module$exports=SortedSet$$module$sorted_set;module$object;var Reducible$$module$sorted_set=module$reducible,Observable$$module$sorted_set=module$observable,TreeLog$$module$sorted_set=module$tree_log;
function SortedSet$$module$sorted_set(a,b,c,d){if(!(this instanceof SortedSet$$module$sorted_set))return new SortedSet$$module$sorted_set(a,b,c);this.contentEquals=b||Object.equals;this.contentCompare=c||Object.compare;this.content=d||Function.noop;this.root=null;this.length=0;this.addEach(a)}SortedSet$$module$sorted_set.prototype.constructClone=function(a){return new this.constructor(a,this.contentEquals,this.contentCompare,this.content)};
SortedSet$$module$sorted_set.prototype.has=function(a){return this.root?(this.splay(a),this.contentEquals(a,this.root.value)):!1};SortedSet$$module$sorted_set.prototype.get=function(a){return this.root&&(this.splay(a),this.contentEquals(a,this.root.value))?this.root.value:this.content(a)};
SortedSet$$module$sorted_set.prototype.add=function(a){var b=new this.Node(a);if(this.root){if(this.splay(a),!this.contentEquals(a,this.root.value))return this.isObserved&&this.dispatchBeforeContentChange([a],[],this.root.index),0>this.contentCompare(a,this.root.value)?(b.right=this.root,b.left=this.root.left,this.root.left=null):(b.left=this.root,b.right=this.root.right,this.root.right=null),this.root.touch(),b.touch(),this.root=b,this.length++,this.isObserved&&this.dispatchContentChange([a],[],
this.root.index),!0}else return this.isObserved&&this.dispatchBeforeContentChange([a],[],0),this.root=b,this.length++,this.isObserved&&this.dispatchContentChange([a],[],0),!0;return!1};
SortedSet$$module$sorted_set.prototype["delete"]=function(a){if(this.root&&(this.splay(a),this.contentEquals(a,this.root.value))){var b=this.root.index;this.isObserved&&this.dispatchBeforeContentChange([],[a],b);if(this.root.left){var c=this.root.right;this.root=this.root.left;this.splay(a);this.root.right=c}else this.root=this.root.right;this.length--;this.root&&this.root.touch();this.isObserved&&this.dispatchContentChange([],[a],b);return!0}return!1};
SortedSet$$module$sorted_set.prototype.indexOf=function(a){return this.root&&(this.splay(a),this.contentEquals(a,this.root.value))?this.root.index:-1};SortedSet$$module$sorted_set.prototype.find=function(a){if(this.root&&(this.splay(a),this.contentEquals(a,this.root.value)))return this.root};SortedSet$$module$sorted_set.prototype.findGreatest=function(a){if(this.root){for(a=a||this.root;a.right;)a=a.right;return a}};
SortedSet$$module$sorted_set.prototype.findLeast=function(a){if(this.root){for(a=a||this.root;a.left;)a=a.left;return a}};SortedSet$$module$sorted_set.prototype.findGreatestLessThanOrEqual=function(a){if(this.root)return this.splay(a),this.root};SortedSet$$module$sorted_set.prototype.findGreatestLessThan=function(a){if(this.root)return this.splay(a),this.root.getPrevious()};
SortedSet$$module$sorted_set.prototype.findLeastGreaterThanOrEqual=function(a){if(this.root)return this.splay(a),0===this.contentCompare(a,this.root.value)?this.root:this.root.getNext()};SortedSet$$module$sorted_set.prototype.findLeastGreaterThan=function(a){if(this.root)return this.splay(a),this.contentCompare(a,this.root.value),this.root.getNext()};SortedSet$$module$sorted_set.prototype.pop=function(){if(this.root){var a=this.findGreatest();this["delete"](a.value);return a.value}};
SortedSet$$module$sorted_set.prototype.shift=function(){if(this.root){var a=this.findLeast();this["delete"](a.value);return a.value}};SortedSet$$module$sorted_set.prototype.push=function(){this.addEach(arguments)};SortedSet$$module$sorted_set.prototype.unshift=function(){this.addEach(arguments)};
SortedSet$$module$sorted_set.prototype.splay=function(a){var b,c,d,e,f,g;if(this.root){b=c=d=new this.Node;g=new this.Node;for(f=this.root;;)if(e=this.contentCompare(a,f.value),0>e)if(f.left){if(0>this.contentCompare(a,f.left.value)&&(e=f.left,f.left=e.right,f.touch(),e.right=f,e.touch(),f=e,!f.left))break;e=new Node$$module$sorted_set;e.right=f;e.left=g.left;g.left=e;d.left=f;d.touch();d=f;f=f.left}else break;else if(0<e)if(f.right){if(0<this.contentCompare(a,f.right.value)&&(e=f.right,f.right=e.left,
f.touch(),e.left=f,e.touch(),f=e,!f.right))break;e=new Node$$module$sorted_set;e.left=f;e.right=g.right;g.right=e;c.right=f;c.touch();c=f;f=f.right}else break;else break;c.right=f.left;c.touch();d.left=f.right;d.touch();f.left=b.right;for(f.right=b.left;g.left;)g.left.right.touch(),g.left=g.left.left;for(;g.right;)g.right.left.touch(),g.right=g.right.right;f.touch();this.root=f}};SortedSet$$module$sorted_set.prototype.reduce=function(a,b,c){this.root&&(b=this.root.reduce(a,b,c,this));return b};
SortedSet$$module$sorted_set.prototype.reduceRight=function(a,b,c){this.root&&(b=this.root.reduceRight(a,b,c,this));return b};SortedSet$$module$sorted_set.prototype.addEach=Reducible$$module$sorted_set.addEach;SortedSet$$module$sorted_set.prototype.forEach=Reducible$$module$sorted_set.forEach;SortedSet$$module$sorted_set.prototype.map=Reducible$$module$sorted_set.map;SortedSet$$module$sorted_set.prototype.toArray=Reducible$$module$sorted_set.toArray;SortedSet$$module$sorted_set.prototype.filter=Reducible$$module$sorted_set.filter;
SortedSet$$module$sorted_set.prototype.every=Reducible$$module$sorted_set.every;SortedSet$$module$sorted_set.prototype.some=Reducible$$module$sorted_set.some;SortedSet$$module$sorted_set.prototype.all=Reducible$$module$sorted_set.all;SortedSet$$module$sorted_set.prototype.any=Reducible$$module$sorted_set.any;SortedSet$$module$sorted_set.prototype.sum=Reducible$$module$sorted_set.sum;SortedSet$$module$sorted_set.prototype.average=Reducible$$module$sorted_set.average;
SortedSet$$module$sorted_set.prototype.concat=Reducible$$module$sorted_set.concat;SortedSet$$module$sorted_set.prototype.flatten=Reducible$$module$sorted_set.flatten;SortedSet$$module$sorted_set.prototype.zip=Reducible$$module$sorted_set.flatten;SortedSet$$module$sorted_set.prototype.sorted=Reducible$$module$sorted_set.sorted;SortedSet$$module$sorted_set.prototype.clone=Reducible$$module$sorted_set.clone;SortedSet$$module$sorted_set.prototype.getContentChangeDescriptor=Observable$$module$sorted_set.getContentChangeDescriptor;
SortedSet$$module$sorted_set.prototype.addContentChangeListener=Observable$$module$sorted_set.addContentChangeListener;SortedSet$$module$sorted_set.prototype.removeContentChangeListener=Observable$$module$sorted_set.removeContentChangeListener;SortedSet$$module$sorted_set.prototype.dispatchContentChange=Observable$$module$sorted_set.dispatchContentChange;SortedSet$$module$sorted_set.prototype.addBeforeContentChangeListener=Observable$$module$sorted_set.addBeforeContentChangeListener;
SortedSet$$module$sorted_set.prototype.removeBeforeContentChangeListener=Observable$$module$sorted_set.removeBeforeContentChangeListener;SortedSet$$module$sorted_set.prototype.dispatchBeforeContentChange=Observable$$module$sorted_set.dispatchBeforeContentChange;SortedSet$$module$sorted_set.prototype.min=function(a){if(a=this.findLeast(a))return a.value};SortedSet$$module$sorted_set.prototype.max=function(a){if(a=this.findGreatest(a))return a.value};
SortedSet$$module$sorted_set.prototype.one=function(){if(!this.root)throw Error("Can't get one value from empty set");return this.root.value};SortedSet$$module$sorted_set.prototype.only=function(){if(!this.root)throw Error("Can't get only value in empty set");if(this.root.left||this.root.right)throw Error("Can't get only value in set with multiple values");return this.root.value};SortedSet$$module$sorted_set.prototype.clear=function(){this.root=null};
SortedSet$$module$sorted_set.prototype.iterate=function(a,b){return new this.Iterator(this,a,b)};SortedSet$$module$sorted_set.prototype.Iterator=Iterator$$module$sorted_set;SortedSet$$module$sorted_set.prototype.summary=function(){return this.root?this.root.summary():"()"};SortedSet$$module$sorted_set.prototype.log=function(a,b,c,d){a=a||TreeLog$$module$sorted_set.unicodeRound;b=b||this.logNode;c||(c=console.log,d=console);c=c.bind(d);this.root&&this.root.log(a,b,c,c)};
SortedSet$$module$sorted_set.prototype.logNode=function(a,b){b(" "+a.value)};SortedSet$$module$sorted_set.logCharsets=TreeLog$$module$sorted_set;SortedSet$$module$sorted_set.prototype.Node=Node$$module$sorted_set;function Node$$module$sorted_set(a){this.value=a;this.right=this.left=null;this.length=1}Node$$module$sorted_set.prototype.reduce=function(a,b,c,d,e){e=e||0;this.left&&(b=this.left.reduce(a,b,c,d,e+1));b=a.call(c,b,this.value,this,d,e);this.right&&(b=this.right.reduce(a,b,c,d,e+1));return b};
Node$$module$sorted_set.prototype.reduceRight=function(a,b,c,d,e){e=e||0;this.right&&(b=this.right.reduce(a,b,c,d,e+1));b=a.call(c,b,this.value,this,d,e);this.left&&(b=this.left.reduce(a,b,c,d,e+1));return b};Node$$module$sorted_set.prototype.touch=function(){this.length=1+(this.left?this.left.length:0)+(this.right?this.right.length:0);this.index=this.left?this.left.length:0};
Node$$module$sorted_set.prototype.checkIntegrity=function(){var a;a=1+(this.left?this.left.checkIntegrity():0);a+=this.right?this.right.checkIntegrity():0;if(this.length!==a)throw Error("Integrity check failed: "+this.summary());return a};Node$$module$sorted_set.prototype.getNext=function(){var a=this;if(a.right){for(a=a.right;a.left;)a=a.left;return a}};Node$$module$sorted_set.prototype.getPrevious=function(){var a=this;if(a.left){for(a=a.left;a.right;)a=a.right;return a}};
Node$$module$sorted_set.prototype.summary=function(){var a=this.value||"-",a=a+(" <"+this.length);return!this.left&&!this.right?"("+a+")":"("+a+" "+(this.left?this.left.summary():"()")+", "+(this.right?this.right.summary():"()")+")"};
Node$$module$sorted_set.prototype.log=function(a,b,c,d){var e=this,f;f=this.left&&this.right?a.intersection:this.left?a.branchUp:this.right?a.branchDown:a.through;var g;this.left&&this.left.log(a,b,function(b){g?d(a.strafe+" "+b):(g=!0,d(a.fromBelow+a.through+b))},function(a){d("  "+a)});var i;b(this,function(b){i?c((e.right?a.strafe:" ")+b):(i=!0,c(f+b))},function(b){d((e.left?a.strafe:" ")+b)});var j;this.right&&this.right.log(a,b,function(b){j?c("  "+b):(j=!0,c(a.fromAbove+a.through+b))},function(b){c(a.strafe+
" "+b)})};function Iterator$$module$sorted_set(a,b,c){this.set=a;this.prev=null;this.end=c;if(b&&(a=this.set.findLeastGreaterThanOrEqual(b)))this.set.splay(a.value),this.prev=a.getPrevious()}Iterator$$module$sorted_set.prototype.next=function(){var a;a=this.prev?this.set.findLeastGreaterThan(this.prev.value):this.set.findLeast();if(!a)throw StopIteration;if(void 0!==this.end&&0<=this.set.contentCompare(a.value,this.end))throw StopIteration;this.prev=a;return a.value};
module$sorted_set.module$exports&&(module$sorted_set=module$sorted_set.module$exports);var module$sorted_map={};module$object;var SortedSet$$module$sorted_map=module$sorted_set,Reducible$$module$sorted_map=module$reducible,AbstractMap$$module$sorted_map=module$abstract_map;module$sorted_map.module$exports=SortedMap$$module$sorted_map;
function SortedMap$$module$sorted_map(a,b,c,d){if(!(this instanceof SortedMap$$module$sorted_map))return new SortedMap$$module$sorted_map(a,b,c,d);b=b||Object.equals;c=c||Object.compare;d=d||Function.noop;this.contentEquals=b;this.contentCompare=c;this.content=d;this.contentSet=new SortedSet$$module$sorted_map(null,function(a,c){return b(a.key,c.key)},function(a,b){return c(a.key,b.key)});this.length=0;this.addEach(a)}
SortedMap$$module$sorted_map.prototype.constructClone=function(a){return new this.constructor(a,this.contentEquals,this.contentCompare,this.content)};SortedMap$$module$sorted_map.prototype.addEach=AbstractMap$$module$sorted_map.addEach;SortedMap$$module$sorted_map.prototype.has=AbstractMap$$module$sorted_map.has;SortedMap$$module$sorted_map.prototype.get=AbstractMap$$module$sorted_map.get;SortedMap$$module$sorted_map.prototype.set=AbstractMap$$module$sorted_map.set;
SortedMap$$module$sorted_map.prototype["delete"]=AbstractMap$$module$sorted_map["delete"];SortedMap$$module$sorted_map.prototype.clear=AbstractMap$$module$sorted_map.clear;SortedMap$$module$sorted_map.prototype.reduce=AbstractMap$$module$sorted_map.reduce;SortedMap$$module$sorted_map.prototype.keys=AbstractMap$$module$sorted_map.keys;SortedMap$$module$sorted_map.prototype.values=AbstractMap$$module$sorted_map.values;SortedMap$$module$sorted_map.prototype.items=AbstractMap$$module$sorted_map.items;
SortedMap$$module$sorted_map.prototype.Item=AbstractMap$$module$sorted_map.Item;SortedMap$$module$sorted_map.prototype.forEach=Reducible$$module$sorted_map.forEach;SortedMap$$module$sorted_map.prototype.map=Reducible$$module$sorted_map.map;SortedMap$$module$sorted_map.prototype.toArray=Reducible$$module$sorted_map.toArray;SortedMap$$module$sorted_map.prototype.filter=Reducible$$module$sorted_map.filter;SortedMap$$module$sorted_map.prototype.every=Reducible$$module$sorted_map.every;
SortedMap$$module$sorted_map.prototype.some=Reducible$$module$sorted_map.some;SortedMap$$module$sorted_map.prototype.all=Reducible$$module$sorted_map.all;SortedMap$$module$sorted_map.prototype.any=Reducible$$module$sorted_map.any;SortedMap$$module$sorted_map.prototype.min=Reducible$$module$sorted_map.min;SortedMap$$module$sorted_map.prototype.max=Reducible$$module$sorted_map.max;SortedMap$$module$sorted_map.prototype.sum=Reducible$$module$sorted_map.sum;
SortedMap$$module$sorted_map.prototype.average=Reducible$$module$sorted_map.average;SortedMap$$module$sorted_map.prototype.flatten=Reducible$$module$sorted_map.flatten;SortedMap$$module$sorted_map.prototype.zip=Reducible$$module$sorted_map.zip;SortedMap$$module$sorted_map.prototype.clone=Reducible$$module$sorted_map.clone;SortedMap$$module$sorted_map.prototype.log=function(a,b){b=b||this.stringify;this.contentSet.log(a,b)};
SortedMap$$module$sorted_map.prototype.report=function(a,b,c,d){d=d||this.stringify;this.contentSet.report(a,b,c,d)};SortedMap$$module$sorted_map.prototype.stringify=function(a,b,c,d){a.call(b,d+" "+c.value.key+": "+c.value.value)};module$sorted_map.module$exports&&(module$sorted_map=module$sorted_map.module$exports);var module$collections={};module$array_shim;module$array;global.List=module$list;global.Set=module$set;global.Map=module$map;global.MultiMap=module$multi_map;global.SortedSet=module$sorted_set;global.SortedMap=module$sorted_map;global.LruSet=module$lru_set;global.LruMap=module$lru_map;global.FastSet=module$fast_set;global.FastMap=module$fast_map;global.WeakMap=module$weak_map;global.Iterator=module$iterator;
})(this);
